services:

  nginx:
    image: "nginx:latest"
    hostname: nginx
    ports:
      - 443:443
      - 80:80
      - 1883:1883
      - 1884:1884
      - 9001:9001
      - 18083:18083
      - 27017:27017
    networks:
      - influx-network
      - api-network
      - mongodb-network
      - mosquitto-network
      - eagle-app-network
      - vaultwarden-network
      - ghost-network
      - emqx-network
      - bookstack-app-network
      - uptime-kuma-network
    restart: always
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_LOGS_DIR}:/var/log/nginx
      - ${NGINX_LETSENCRYPT_DIR}:/etc/letsencrypt
    env_file:
      - .env

  api:
    build:
      context: ./repos/telemetry-api
      dockerfile: Dockerfile
    hostname: "api"
    networks:
      - api-network
    restart: always
    volumes:
      - api-temp-data:/app/tmp
      - ${API_CONF_FILE}:/app/secrets/config.yaml
    environment:
      - CONFIG_PATH=/app/secrets/config.yaml

  eagle-app:
    build:
      context: ./repos/eagle-app
      dockerfile: Dockerfile
    hostname: eagle-app
    networks:
      - eagle-app-network
      - mosquitto-network
      - mongodb-network
    restart: always
    env_file:
      - .eagle-app.env

  influx:
    image: "influxdb:latest"
    hostname: "influx"
    networks:
      - influx-network
    restart: always
    volumes:
      - influx-varlib-data:/var/lib/influxdb2
      - influx-etc-data:/etc/influxdb2

  mongodb:
    image: "mongo:latest"
    hostname: "mongodb"
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - mongodb-network

  mosquitto:
    image: "eclipse-mosquitto"
    hostname: "mosquitto"
    restart: always
    volumes:
      - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - mosquitto-network 

  emqx:
    image: "emqx"
    hostname: "emqx"
    restart: always
    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-etc-data:/opt/emqx/etc
    networks:
      - emqx-network

  influx-logger:
    build:
      context: ./repos/influx-logger
      dockerfile: Dockerfile
    volumes:
      - ${INFLUX_LOGGER_CONF_FILE}:/configuration.json
    networks:
      - influx-network
      - mosquitto-network
      - api-network
    restart: always

  vaultwarden:
    image: "vaultwarden/server"
    hostname: "vaultwarden"
    environment:
      - DOMAIN=https://vaultwarden.eagletrt.it
    volumes: 
      - ./private/vaultwarden/vw-data:/data/
    networks:
      - vaultwarden-network 
    restart: unless-stopped

  ghost:
    image: "ghost"
    hostname: "ghost"
    environment:
      - NODE_ENV=development
    volumes:
      - ghost-data:/var/lib/ghost/content
      - ./configs/ghost.json:/var/lib/ghost/config.production.json
    networks:
      - ghost-network
    restart: unless-stopped

  bookstack-app:
    image: "lscr.io/linuxserver/bookstack"
    hostname: bookstack-app
    environment:
      - APP_URL=https://docs.eagletrt.it 
      - DB_HOST=bookstack-db
      - DB_PORT=3306
      - DB_USER=bookstack
      - DB_PASS=${BOOKSTACK_DB_PASS}
      - DB_DATABASE=bookstackapp
    volumes:
      - ./private/bookstack_app:/config
    networks:
      - bookstack-app-network
      - bookstack-db-network
    restart: always
    depends_on:
      - bookstack-db

  bookstack-db:
    image: "lscr.io/linuxserver/mariadb"
    hostname: "bookstack-db"
    environment:
      - MYSQL_ROOT_PASSWORD=${BOOKSTACK_DB_PASS}
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=bookstack
      - MYSQL_PASSWORD=${BOOKSTACK_DB_PASS}
    volumes:
      - ./private/bookstack_db:/config
    networks:
      - bookstack-db-network
    restart: always

  uptime-kuma:
    image: "louislam/uptime-kuma:1"
    hostname: "uptime-kuma"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./private/uptime_kuma:/app/data
    networks:
      - uptime-kuma-network
    restart: unless-stopped
    
networks:
  api-network:
  influx-network:
  mongodb-network:
  mosquitto-network:
  eagle-app-network:
  vaultwarden-network:
  ghost-network:
  emqx-network:
  bookstack-app-network:
  bookstack-db-network:
  uptime-kuma-network:
volumes:
  influx-varlib-data:
  influx-etc-data:
  mongodb-data:
  api-temp-data:
  ghost-data:
  emqx-data:
  emqx-etc-data:
