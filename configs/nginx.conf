# For a full example of the configuration file, see https://www.nginx.com/resources/wiki/start/topics/examples/full/
events {}
http {

  log_format custom '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent"';

  server { # influx server
    listen                443 ssl;
    listen                80;
    server_name           influx.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/influx.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/influx.eagletrt.it/privkey.pem;
    client_max_body_size  5M;
    location / {
      proxy_pass  http://influx:8086;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # telemetry-api (pivetta)
    listen                443 ssl;
    listen                80;
    server_name           api.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/api.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/api.eagletrt.it/privkey.pem;

    location / {
      proxy_pass  http://api:8080;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # emqx control panel
    listen                18083 ssl;
    server_name           api.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/api.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/api.eagletrt.it/privkey.pem;

    location / {
      proxy_pass  http://emqx:18083;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # eagle-app
    listen                443 ssl;
    listen                80;
    server_name           app.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/app.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/app.eagletrt.it/privkey.pem;

    access_log /var/log/nginx/app.eagletrt.it.access.log custom;

    location / {
      proxy_pass  http://eagle-app:3000;
    }

    location /mqtt {
      proxy_pass http://mosquitto:9001;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  } 

  server { # vaultwarden
    listen                443 ssl;
    listen                80;
    server_name           vaultwarden.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/vaultwarden.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/vaultwarden.eagletrt.it/privkey.pem;

    location / {
      proxy_pass http://vaultwarden:80;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # docs
    listen                443 ssl;
    listen                80;
    server_name           docs.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/docs.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/docs.eagletrt.it/privkey.pem;

    location / {
      proxy_pass http://bookstack-app:80;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # uptime-kuma 
    listen                443 ssl;
    listen                80;
    server_name           monitor.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/monitor.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/monitor.eagletrt.it/privkey.pem;

    location / {
      proxy_pass http://uptime-kuma:3001;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # keycloak
    listen 443 ssl;
    listen 80;
    server_name idp.eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/idp.eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/idp.eagletrt.it/privkey.pem;

    location / {
        proxy_pass http://keycloak:8080;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
    } 

    location /ws/client/ {
      proxy_pass http://authentik:9000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 86400;
    }

    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # shlink
    listen 443 ssl;
    listen 80;
    server_name           eagletrt.it;
    ssl_certificate       /etc/letsencrypt/live/eagletrt.it/fullchain.pem;
    ssl_certificate_key   /etc/letsencrypt/live/eagletrt.it/privkey.pem;

    location / {
        proxy_pass http://shlink:8080;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
    } 
    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }
  }

  server { # Default rejection on port 80
    listen 80 default_server;
    return 444;
  }

  server { # Default rejection HTTPS 
    listen 443 default_server ssl;
    listen 18083 ssl;
    ssl_stapling          off;
    ssl_ciphers           NULL;
    ssl_reject_handshake  on;
    return 444;
  }
}

stream {

  server {
    listen      1883;
    proxy_pass  mosquitto:1883;
  }
  server {
    listen      1884;
    proxy_pass  emqx:1883;
  }
  server {
    listen                 27017 so_keepalive=on;
    proxy_pass             mongodb:27017;
  }
}
